
 * read about caching in Angular:
 - read once, if I won't understand then I will try to read about those aspects i do not understand

 * store obligation groups data:
 solution #1 (read about caching in angular):

 * display bond data in the bond view:

 * caching data:
 strategy #1 (mapping obligation groups):
 - user picks an obligation group,
 - obligation group with all data is polled from
 the database and that is stored on the client side,
 - he goes to another group, another group data is polled,
 - he goes back to previous group, but in this case the data is polled from the cache,
 - each minute if changes were made the data is updated,
 the server pushes new data and the UI is updated,
 - we can make a feature when there is not many service units left to update UI more frequently,
 - cache obligation groups in the application

 implementation:
 - poll for all obligation groups,
 - receive the data and store it in a map
 - create a map {obligation_group_id, obligation group + bonds and all the data},
 - if the id already exists then i will get it from this map instead of getting it from the server,

 questions:
 + I need the data about the obligation group at the very beginning?
 - poll for obligation


